rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Fonction pour vérifier si l'utilisateur est authentifié
    function isAuthenticated() {
      return request.auth != null;
    }

    // Fonction pour vérifier le rôle de l'utilisateur
    function hasRole(role) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    // Fonction pour vérifier si l'utilisateur est le propriétaire de la demande
    function isRequestOwner(requestData) {
      return (isAuthenticated() && requestData.userId == request.auth.uid) ||
             (!isAuthenticated() && requestData.userId == 'anonymous');
    }

    // Règles pour la collection users
    match /users/{userId} {
      // Permettre la lecture des informations des mécaniciens par tout le monde
      allow read: if 
        // L'utilisateur est le propriétaire du profil
        request.auth.uid == userId ||
        // Ou l'utilisateur est un admin
        hasRole('admin') ||
        // Ou c'est un profil de mécanicien
        get(/databases/$(database)/documents/users/$(userId)).data.role == 'mechanic';
        
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Règles pour la collection helpRequests
    match /helpRequests/{requestId} {
      // Tout le monde peut créer une demande d'aide
      allow create: if true;
      
      // Lecture autorisée si :
      // - L'utilisateur est le propriétaire de la demande
      // - L'utilisateur est un mécanicien
      // - L'utilisateur est un admin
      // - L'utilisateur est un dispatcher
      allow read: if 
        isRequestOwner(resource.data) ||
        hasRole('mechanic') || 
        hasRole('admin') || 
        hasRole('dispatcher');
      
      // Les mécaniciens peuvent mettre à jour les demandes
      allow update: if 
        // Les mécaniciens peuvent mettre à jour
        (hasRole('mechanic') && (
          // Peut accepter une nouvelle demande
          (resource.data.status == 'pending' && request.resource.data.status == 'accepted') ||
          // Peut refuser une demande
          (resource.data.status == 'pending' && request.resource.data.status == 'rejected') ||
          // Peut mettre à jour une demande qu'il a acceptée
          (resource.data.mechanicId == request.auth.uid)
        )) ||
        // Le propriétaire de la demande peut annuler sa demande
        (isRequestOwner(resource.data) && request.resource.data.status == 'cancelled');
    }
  }
} 